import React, { useEffect, useState } from 'react';
import { Link, useLocation } from 'react-router-dom';
import ArrowCircleDownIcon from '@mui/icons-material/ArrowCircleDown';
import ShareIcon from '@mui/icons-material/Share';

import './Schedule.css';
import EachDay from './Components/EachDay/EachDay';
import Restaurants from './Components/Restaurants/Restaurants';
import Hotels from './Components/Hotels/Hotels';
import AppHeader from '../../Components/AppHeader/AppHeader';
import Footer from '../../Components/Footer/Footer';
import SnackBar from './Components/SnackBar/SackBar';

const Schedule = () => {
    const location = useLocation();
    const searchParams = new URLSearchParams(location.search);
    const resultID = searchParams.get('id');
    const [schedule, setSchedule] = useState(null);
    const [snackBarOpen, setSnackBarOpen] = useState(false);
    const [user, setUser] = useState(null);
    
    const handleshare = () => {
        navigator.clipboard.writeText(`${process.env.REACT_APP_client_url}/schedule?id=${resultID}`);
        setSnackBarOpen(true);
    }

    const handleClose = (event, reason) => {
        if (reason === 'clickaway') {
            return;
        }
        setSnackBarOpen(false);
    }

    useEffect(() => {
        // console.log("fetching schedule");
        fetch(`${process.env.REACT_APP_server_url}/schedule?id=${resultID}`)
            .then(res => res.json())
            .then(res => {
                // console.log(res);
                setSchedule(res)
            })
            .catch(err => console.log(err))
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, []);

    if (resultID === null) {
        return <ScheduleBlank user={user} setUser={setUser}/>
    } else if (schedule === null) {
        return <ScheduleLoading user={user} setUser={setUser}/>
    }

    return (
        <div className='main-container'>
            <AppHeader user={user} setUser={setUser} />
            <div className='scroll-container'>

                <div className='details-container'>
                    <div className='details-heading-container'>
                        <div className='heading-title-container'>
                            <h1>Schedule Details</h1>
                        </div>
                        <div className='share-button-container'>
                            <button className='share-button' onClick={handleshare}><ShareIcon fontSize='large'/></button>
                        </div>
                    </div>

                    <ul className='details-data-container'>
                        <li className='detail'><span className='details-attribute'>Destination:</span> {schedule.destination}</li>
                        <li className='detail'><span className='details-attribute'>From:</span> {schedule.from}</li>
                        <li className='detail'><span className='details-attribute'>To:</span> {schedule.to}</li>
                        <li className='detail'><span className='details-attribute'>No. of days:</span> {schedule.days}</li>
                        <li className='detail'><span className='details-attribute'>Generated By:</span> {schedule.generatedBy}</li>
                        <li className='detail'><span className='details-attribute'>Generated on:</span> {schedule.generatedDate}</li>
                    </ul>
                    <div className='budget-container'>
                        <h2 className='estimated-budget-heading'>Estimated Budget per person:</h2>
                        <div className='budget-value-container'>
                            <h1 className='budget-value'>â‚¹ {schedule.budget} </h1>
                            <p>&nbsp;  (approx)</p>
                        </div>
                    </div>

                    <div className='scroll-down-text-container'>
                        <ArrowCircleDownIcon fontSize='large' />&nbsp;&nbsp;Scroll down for full Schedule
                    </div>
                </div>
                <div>
                    {
                        Object.keys(schedule.places).map((day, index) => {
                            return <EachDay key={index} day={index + 1} date={schedule.all_days[index]} places={schedule.places[`day${index + 1}`]} />
                        })
                    }
                </div>


                <Hotels places={schedule.hotels} />

                <Restaurants places={schedule.restaurants} />
                <SnackBar open={snackBarOpen} handleClose={handleClose} />
                <Footer />
            </div>
        </div>
    )
}

const ScheduleBlank = (props) => {
    return (
        <div>
            <div className='main-container'>
                <AppHeader user={props.user} setUser={props.setUser}/>
                <div className='middle-container'>
                    <div className='mistake-text-container'>
                        <h1 >It seems you have reached this page by mistake</h1>
                        <h2 >Go back to the <Link to='/'>Home</Link> page and try again</h2>
                    </div>
                </div>
            </div>
            <Footer />
        </div>
    )
}

const ScheduleLoading = (props) => {
    return (
        <div>
            <div className='main-container'>
                <AppHeader user={props.user} setUser={props.setUser}/>
                <div className='middle-container'>
                    <div className='loading-container'>
                        <p className='schedule-loading-text' >Schedule Loading...</p>
                    </div>
                </div>
            </div>
            <Footer />
        </div>
    )
}

export default Schedule;